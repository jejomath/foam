page_modules:
- name: assay
  pages:

#############################################################
# Assays
 #############################################################


  - name: find_assay
    descr: Search page for table assay
    type: Table
    config:
      source: assay
      view_columns:
      - field: name
        width: 200
      - field: type
        width: 200
      - field: descr
        width: 200
      - field: cell_line
        width: 200
      - field: for_program
        width: 200
      search_fields:
      - name
      - type
      - descr
      - cell_line
      - for_program
      row_action:
        display: Select Assay
        target: view_assay
        params_fn: '({id: data.id})'
    buttons:
    - display: New Assay
      target: new_assay
      mode: modal
    - display: Done
      target: back

  - name: view_assay
    descr: View a record from table assay
    type: Form
    config:
      source: assay
      view_fields:
      - name
      - type
      - descr
      - field: cell_line
        visible_fn: (data.type === 'VITRO')
      - for_program
      reference_tables:
      - table_page: find_experiment
        display: Experiment
        params_fn: '({assay__id: data.record.id})'
    buttons:
    - display: Edit
      target: edit_assay
      params_fn: '({ id: params.id })'
    - display: New Experiment
      target: new_experiment
      mode: modal
      params_fn: '({ assay: data.record })'
    - display: Done
      target: back

  - name: new_assay
    descr: Edit a record from table assay
    type: Form
    config:
      source: assay
      edit_fields:
      - name
      - type
      - field: cell_line
        lookup: find_cell_line
        visible_fn: (data.type === 'VITRO')
    buttons:
    - display: Done
      target: edit_assay
      params_fn: '( {id: data.id })'
      pretarget_fn: ( context.clients.record.save() )
    - display: Cancel
      target: back

  - name: edit_assay
    descr: Edit a record from table assay
    type: Form
    config:
      source: assay
      view_fields:
      - name
      - type
      edit_fields:
      - descr
      - field: cell_line
        lookup: find_cell_line
        visible_fn: (data.type === 'VITRO')
      - field: for_program
        lookup: find_program
    buttons:
    - display: Save
      target: back
      pretarget_fn: ( context.clients.record.save() )
    - display: Cancel
      target: back


#############################################################
# Experiments
#############################################################

  - name: find_experiment
    descr: Search page for table experiment
    type: Table
    config:
      source: experiment
      view_columns:
      - field: name
        width: 200
      - field: description
        width: 200
      - field: status
        width: 200
      - field: program
        width: 200
      - field: bio_lead
        width: 200
      - field: target_start_date
        width: 200
      - field: target_duration
        width: 200
      - field: start_date
        width: 200
      - field: end_date
        width: 200
      - field: assay
        width: 200
      - field: type
        width: 200
      - field: perturbations
        width: 200
      search_fields:
      - name
      - description
      - status
      - program
      - bio_lead
      - target_start_date
      - target_duration
      - start_date
      - end_date
      - assay
      - type
      - perturbations
      row_action:
        display: Select Experiment
        target: view_experiment
        params_fn: '({id: data.id})'
    buttons:
    - display: New Experiment
      target: new_experiment
      mode: modal
    - display: Done
      target: back

  - name: view_experiment
    descr: View a record from table experiment
    type: Form
    config:
      source: experiment
      view_fields:
      - name
      - description
      - status
      - program
      - bio_lead
      - target_start_date
      - target_duration
      - start_date
      - end_date
      - assay
      - type
      - perturbations
      reference_tables:
      - table_page: find_plate
        display: Plates
        params_fn: '({ experiment__id: data.record.id })'
    buttons:
    - display: Edit
      target: edit_experiment
      params_fn: '({ id: params.id })'
    - display: Add Plate
      target: edit_plate
      params_fn: '({ experiment: data.record })'
      mode: modal
    - display: Done
      target: back

  - name: new_experiment
    descr: Create a new record in table experiment
    type: Form
    config:
      source: experiment
      edit_fields:
      - field: assay
        lookup: find_assay
      - field: program
    buttons:
    - display: Done
      pretarget_fn: '( context.clients.record.save() )'
      target: edit_experiment
      params_fn: '( {id: data.id} )'
    - display: Cancel
      target: back

  - name: edit_experiment
    descr: Edit a record from table experiment
    type: Form
    config:
      source: experiment
      view_fields:
      - name
      - program
      edit_fields:
      - description
      - status
      - field: bio_lead
        lookup: find_person
      - target_start_date
      - target_duration
      - start_date
      - end_date
      - field: assay
        lookup: find_assay
      - type
      - field: perturbations
        lookup: find_perturbation
    buttons:
    - display: Save
      target: back
      pretarget_fn: ( context.clients.record.save() )
    - display: Cancel
      target: back

#############################################################
# Plates
#############################################################

- name: plate
  pages:

  - name: find_plate
    descr: Search page for table plate
    type: Table
    config:
      source: plate
      view_columns:
      - field: name
        width: 200
      - field: experiment
        width: 200
      - field: row_count
        width: 200
      - field: column_count
        width: 200
      search_fields:
      - name
      - experiment
      - row_count
      - column_count
      row_action:
        display: Select Plate
        target: view_plate
        params_fn: '({id: data.id})'
    buttons:
    - display: New Plate
      target: edit_plate
    - display: Done
      target: back

  - name: view_plate
    descr: View a record from table plate
    type: Form
    config:
      source: plate
      view_fields:
      - name
      - experiment
      - row_count
      - column_count
      reference_tables:
      - table_page: find_plate_well
        display: Plate Well
        params_fn: '({ plate__id: data.record.id, rows: data.record.row_count, cols: data.record.column_count })'
    buttons:
    - display: Edit
      target: edit_plate
      params_fn: '({ id: params.id })'
    - display: Edit Wells
      target: find_plate_well
      params_fn: '({ plate__id: data.record.id, rows: data.record.row_count, cols: data.record.column_count })'
    - display: View Plate Map
      target: view_plate_map
      params_fn: '({ plate__id: data.record.id })'
    - display: Done
      target: back

  - name: edit_plate
    descr: Edit a record from table plate
    type: Form
    config:
      source: plate
      edit_fields:
      - name
      - field: experiment
        lookup: find_experiment
      - row_count
      - column_count
    buttons:
    - display: Save
      target: back
      pretarget_fn: ( context.clients.record.save() )
    - display: Cancel
      target: back

- name: plate_well
  pages:

  - name: find_plate_well
    descr: Search page for table plate_well
    type: Table
    config:
      source: plate_well
      edit_columns:
      - field: row
        width: 20
      - field: column
        width: 20
      - field: purpose
        width: 200
      - field: perturbation
        width: 200
      on_load_fn: "
{
  const existing = await context.getRecords('plate_well', { plate__id: params.plate__id });
  if (existing.length > 0) {
    context.setState(existing)
  } else {
    Array(parseInt(params.rows)).fill().forEach((_, r) => {
      Array(parseInt(params.cols)).fill().forEach((_, c) => {
        context.addNew({name: `p${params.plate__id}r${r}c${c}`, plate: params.plate__id, row: r, column: c})
      })
    }) 
  }
}"

    buttons:
    - display: Done
      target: back
    - display: Save
      target: back
      pretarget_fn: ( context.clients.find_plate_well.save() )

  - name: view_plate_map
    descr: View the wells of a plate as a grid
    type: Grid
    config:
      source: plate_well
      row_field: row
      column_field: column
      display_field: purpose
    buttons:
    - display: Done
      target: back
    - display: Save
      target: back
      pretarget_fn: ( context.clients.view_plate_map.save() )

  - name: view_plate_grid
    descr: View a record from table plate
    type: Layout
    config:
      cells:
      - name: form_cell
        display: ''
        type: Form
        config:
          source: plate
          view_fields:
          - name
          - experiment
      - name: grid_cell
        display: Plate Map
        descr: View the wells of a plate as a grid
        type: Grid
        template: view_plate_map
        config: {}
        #   source: plate_well
        #   row_field: row
        #   column_field: column
        #   display_field: purpose
        #   params_fn: '({ plate__id: data.form_cell.id })'
    buttons:
    - display: Done
      target: back

